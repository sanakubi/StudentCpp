#include <iostream>
#include<math.h>
#include <cmath>

// Y = a*(X^b)

int main()
{
    float x[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200 };
    float y[] = { 9411.0f, 9364.0f, 9341.0f, 9327.0f, 9316.0f, 9304.0f, 9300.0f, 9291.0f, 9286.0f, 9280.0f, 9278.0f, 9276.0f, 9269.0f, 9270.0f, 9268.0f, 9262.0f, 9256.0f, 9258.0f, 9258.0f, 9252.0f, 9246.0f, 9248.0f, 9242.0f, 9244.0f, 9245.0f, 9241.0f, 9239.0f, 9238.0f, 9234.0f, 9232.0f, 9235.0f, 9227.0f, 9231.0f, 9231.0f, 9230.0f, 9231.0f, 9226.0f, 9222.0f, 9220.0f, 9226.0f, 9219.0f, 9214.0f, 9217.0f, 9219.0f, 9218.0f, 9215.0f, 9217.0f, 9215.0f, 9211.0f, 9211.0f, 9211.0f, 9208.0f, 9211.0f, 9212.0f, 9207.0f, 9210.0f, 9207.0f, 9207.0f, 9210.0f, 9201.0f, 9204.0f, 9202.0f, 9203.0f, 9202.0f, 9203.0f, 9202.0f, 9200.0f, 9198.0f, 9199.0f, 9193.0f, 9194.0f, 9193.0f, 9199.0f, 9196.0f, 9192.0f, 9192.0f, 9194.0f, 9193.0f, 9194.0f, 9195.0f, 9197.0f, 9198.0f, 9195.0f, 9193.0f, 9190.0f, 9189.0f, 9190.0f, 9191.0f, 9187.0f, 9191.0f, 9191.0f, 9190.0f, 9191.0f, 9188.0f, 9188.0f, 9188.0f, 9188.0f, 9188.0f, 9186.0f, 9185.0f, 9188.0f, 9182.0f, 9182.0f, 9186.0f, 9189.0f, 9188.0f, 9188.0f, 9183.0f, 9185.0f, 9182.0f, 9182.0f, 9182.0f, 9184.0f, 9182.0f, 9183.0f, 9183.0f, 9180.0f, 9181.0f, 9179.0f, 9182.0f, 9179.0f, 9177.0f, 9178.0f, 9180.0f, 9178.0f, 9177.0f, 9178.0f, 9177.0f, 9177.0f, 9182.0f, 9177.0f, 9171.0f, 9175.0f, 9179.0f, 9177.0f, 9175.0f, 9174.0f, 9177.0f, 9175.0f, 9177.0f, 9174.0f, 9177.0f, 9179.0f, 9178.0f, 9175.0f, 9172.0f, 9176.0f, 9176.0f, 9175.0f, 9178.0f, 9178.0f, 9174.0f, 9174.0f, 9176.0f, 9176.0f, 9173.0f, 9175.0f, 9172.0f, 9174.0f, 9175.0f, 9174.0f, 9178.0f, 9174.0f, 9173.0f, 9174.0f, 9172.0f, 9177.0f, 9178.0f, 9172.0f, 9175.0f, 9171.0f, 9175.0f, 9173.0f, 9173.0f, 9174.0f, 9168.0f, 9171.0f, 9173.0f, 9165.0f, 9166.0f, 9170.0f, 9168.0f, 9169.0f, 9174.0f, 9173.0f, 9170.0f, 9168.0f, 9171.0f, 9174.0f, 9167.0f, 9167.0f, 9170.0f, 9170.0f, 9169.0f, 9169.0f, 9167.0f, 9168.0f, 9167.0f, 9175.0f, 9171.0f };

    //double x[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
    //double y[] = { 1000, 900, 810, 720, 640, 550, 460, 370, 280, 190 };



    int N = 200; //200;
    float a, b, a1, b1;

    float SumX, SumY, SumSqrX, SumXY;
    
    /////////////// pows aprox

    SumX = SumY = SumSqrX = SumXY = 0;

    for (int i = 0; i < N; i++) {
        SumX += log10(x[i]);
        SumY += log10(10000 - y[i]);
        SumSqrX += sqrt(log10(x[i]));
        SumXY += log10(x[i]) * log10(10000 - y[i]);
    }

    b = (N * SumXY - SumX * SumY) / (N * SumSqrX - sqrt(SumX));
    a = (SumY - b * SumX) / N;

    b1 = b;
    a1 = pow(10, a);

    std::cout << " " << a << " " << b << " / " << a1 << " " << b1 << " " << " " << "\n";

    /////////////// expo aprox ////   Y_calc := a1*exp(b1/X);

    SumX = SumY = SumSqrX = SumXY = 0;
    a = b = a1 = b1 = 0;

    SumX = SumY = SumSqrX = SumXY = 0;

    for (int i = 0; i < N; i++) {
        SumX += 1 / x[i];
        SumY += log(10000 - y[i]);
        SumSqrX += sqrt(1/x[i]);
        SumXY += 1/x[i] * log(10000 - y[i]);
    }

    b = (N * SumXY - SumX * SumY) / (N * SumSqrX - sqrt(SumX));
    a = (SumY - b * SumX) / N;

    b1 = b;
    a1 = exp(a);

    std::cout << " " << a << " " << b << " / " << a1 << " " << b1 << " " << " " << "\n";
}


/*
    double
 2.88965 0.00670367 / 775.626 0.00670367
 6.68337 -0.0261094 / 799.009 -0.0261094

    float
 2.88966 0.00670249 / 775.631 0.00670249
 6.68337 -0.0261089 / 799.005 -0.0261089

*/
